#!/bin/bash
#
# Startup/shutdown script for nVidia CUDA
#
# chkconfig: 345 80 20
# description: Startup/shutdown script for nVidia CUDA

# Source function library.
. /etc/init.d/functions

DRIVER=nvidia
DRIVERUVM=nvidia_uvm
RETVAL=0

# Install driver if needed then load 

function loaddriver() {
   /sbin/modprobe $DRIVER && success || failure
   RETVAL=$?

   if [ "$RETVAL" -ne 0 ] ; then
      echo -n $"Installing $DRIVER driver: "
      /opt/cuda/driver/install-driver
      RETVAL=$?
      echo
      [ "$RETVAL" = 0 ] || exit $RETVAL
      /sbin/modprobe $DRIVER && success || failure
      RETVAL=$?
   fi

   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL
}

# Create /dev nodes for nvidia devices
function createnodes() {
   # Count the number of found NVIDIA controllers 
   N3D=`/sbin/lspci | grep -i NVIDIA | grep "3D controller" | wc -l`
   NVGA=`/sbin/lspci | grep -i NVIDIA | grep "VGA compatible controller" | wc -l`

   N=`expr $N3D + $NVGA - 1`
   for i in `seq 0 $N`; do
       mknod -m 666 /dev/nvidia$i c 195 $i
       RETVAL=$?
       [ "$RETVAL" = 0 ] || exit $RETVAL
   done

   mknod -m 666 /dev/nvidiactl c 195 255
   RETVAL=$?
   [ "$RETVAL" = 0 ] || exit $RETVAL
}

# Remove /dev nodes for nvidia devices
function removenodes() {
   rm -f /dev/nvidia*
}

# set GPU to default mode on all gpus
function setgpuaccess() {
   /usr/bin/nvidia-smi -c 0
   RETVAL=$?
   [ "$RETVAL" = 0 ] || exit $RETVAL
}

# set persistence mode to enabled on all gpus
function setgpumode() {
   /usr/bin/nvidia-smi -pm 1
   RETVAL=$?
   [ "$RETVAL" = 0 ] || exit $RETVAL
}

# Start daemon
function start() {
   echo -n $"Unloading nouveau kernel module: "
   /sbin/modprobe -r nouveau && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

   echo -n $"Loading $DRIVER kernel module: "
   loaddriver && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

   echo -n $"Initializing CUDA /dev entries: "
   createnodes && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

   echo -n $"Setting exclusive process access on all GPUs: "
   setgpuaccess && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

   echo -n $"Setting persistence mode on all GPUs: "
   setgpumode && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

}

# Stop daemon
function stop() {
   lsmod | grep $DRIVERUVM 2>&1 > /dev/null
   RETVAL=$?
   if [ "$RETVAL" = 0 ] ; then
       echo -n $"Unloading $DRIVERUVM kernel module: "
       rmmod -f $DRIVERUVM && success || failure
       RETVAL=$?
   else
       RETVAL=0
   fi
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

   echo -n $"Unloading $DRIVER kernel module: "
   rmmod -f $DRIVER && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL

   echo -n $"Removing CUDA /dev entries: "
   removenodes && success || failure
   RETVAL=$?
   echo
   [ "$RETVAL" = 0 ] || exit $RETVAL
}

# See how we were called
case "$1" in
   start)
       start
      ;;
   stop)
       stop
      ;;
   restart)
       stop
       start
      ;;
   *)
       echo $"Usage: $0 {start|stop|restart}"
       RETVAL=1
esac
exit $RETVAL
